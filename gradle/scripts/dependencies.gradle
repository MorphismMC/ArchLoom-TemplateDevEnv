dependencies {
    minecraft "com.mojang:minecraft:${libs.versions.minecraft.get()}"
    mappings loom.layered {
        it.mappings("org.quiltmc:quilt-mappings:${libs.versions.minecraft.get()}+build.${libs.versions.quiltMappings.get()}:intermediary-v2")
        it.parchment("org.parchmentmc.data:parchment-${libs.versions.minecraft.get()}:${libs.versions.parchment.get()}@zip")
        it.officialMojangMappings { nameSyntheticMembers = false }
    }

    forge forge.minecraftForge

    /* -------------------------------------------------- Libraries -------------------------------------------------- */

    compileOnly 'org.projectlombok:lombok:1.18.24' // Lombok
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    implementation 'com.google.code.findbugs:jsr305:3.0.2' // FindBugs

    api(include("io.github.llamalad7:mixinextras-forge:${this.forge.versions.mixinextras.get()}")) // Mixin Extras
    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:${this.forge.versions.mixinextras.get()}"))

    // For Testing
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2' // JUnit 5
    testImplementation 'io.javalin:javalin:5.4.2' // JavaLin
    testImplementation 'org.mockito:mockito-core:5.2.0' // Mockito

    /* -------------------------------------------------- Mod Deps -------------------------------------------------- */

    modApi forge.registrate // Registrate
    include forge.registrate

    modApi forge.configuration // Configuration
    include forge.configuration

    /* -------------------------------------------------- Mod CompileOnly -------------------------------------------------- */

    modCompileOnly(forge.jei.common.api) { transitive = false } // JEI
    modCompileOnly(forge.jei.forge.api) { transitive = false }
    modCompileOnly(forge.jei.forge.impl) { transitive = false }

    modCompileOnly forge.rei.plugin // REI
    modCompileOnly forge.rei.api
    modCompileOnly forge.rei.forge

    // EMI
    modCompileOnly("dev.emi:emi-forge:${forge.versions.emi.get()}:api")
    modImplementation forge.emi

    modCompileOnly(forge.theoneprobe) { transitive = false } // TOP
    modImplementation forge.jade // Jade
    modImplementation forge.kubejs // KJS

    /* -------------------------------------------------- Mod RuntimeOnly -------------------------------------------------- */

    //modRuntimeOnly(forge.worldStripper) // World Stripper
}